//template class in. c++ supports generic fun and classes, where geenric+template
// generic class workd on more than one data type
#include <stdio.h>
#include <iostream>
using namespace std;
template <class t>// t is the generic data type now
class ari{
private:
    t a;
    t b;
public:
    ari(t a, t b);
    t add();
    t sub();
};// scope of t ends here
template <class t>
ari <t> :: ari(t a, t b){
    this->a =a;
    this ->b =b;
}
template <class t>
t ari<t> :: add(){
    t c = a+b;
    return c;
}
template <class t>
t ari<t> :: sub(){
    t c= a-b;
    return c;
}
int main()
{
  ari <int > a(10,5);
  cout<<a.add();
  ari <float> a1(11.2,45.3);
  cout<<a1.add();
  
  return 0;
}
